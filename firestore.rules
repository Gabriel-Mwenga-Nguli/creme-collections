
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Allow public read access.
    // Writes should be restricted (e.g., to admins).
    match /products/{productId} {
      allow read: if true;
      // Example: allow write: if request.auth != null && request.auth.token.admin == true;
      // For now, denying writes by default if not admin (assuming admin claim exists)
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // User-specific data:
    // Allow authenticated users to read/write their own data under /users/{userId}/...
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Orders:
    // Allow authenticated users to create orders for themselves.
    // Allow authenticated users to read their own orders.
    // Admins can read/write all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.token.admin == true);
      // Example: allow update, delete: if request.auth != null && request.auth.token.admin == true; // Or more specific logic
      allow update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    // It's generally safer to deny access to any path not explicitly matched.
    // If you have other collections, add rules for them.
    // Your previous rule: match /{document=**} { allow read, write: if request.time < timestamp.date(2025, 7, 17); }
    // can be a fallback, but it's very broad.
    // If you keep a fallback, ensure it doesn't unintentionally override more specific denials.
    // For now, let's remove the broad timed rule if the specific rules above cover main cases.
    // If you need a general temporary rule, re-add it CAREFULLY.
    // match /{document=**} {
    //  allow read, write: if false; // Default deny unless matched above
    // }
  }
}

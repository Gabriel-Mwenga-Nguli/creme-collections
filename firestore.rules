
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Publicly readable by anyone.
    // Writes are restricted by the fallback rule for now (time-based).
    // For production, you'd want specific admin-only write rules.
    match /products/{productId} {
      allow read: if true;
      // Example for admin write (requires admin custom claim or field):
      // allow write: if request.auth != null && request.auth.token.admin == true;
      // For now, allowing writes if within the time limit to match existing global rule
      allow write: if request.time < timestamp.date(2025, 7, 17);
    }

    // Users:
    // - User can read and write their own top-level document (e.g., /users/{userId})
    // - User can read and write documents in their own subcollections (e.g., wishlist, addresses, messages)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/{subcollection}/{documentId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Orders:
    // - Authenticated users can create orders if the order's userId matches their own.
    // - Authenticated users can read their own orders.
    // - (Admin access to all orders would need a separate rule or backend handling).
    // - Updates are restricted by the fallback rule for now.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Example for admin read/update (requires admin custom claim or field):
      // allow read, update: if request.auth != null && request.auth.token.admin == true;
      // For now, allowing updates if within the time limit to match existing global rule
      allow update: if request.time < timestamp.date(2025, 7, 17);
    }

    // Fallback for any other collections not explicitly matched above.
    // This is the same as your current global rule.
    // It's generally better to define specific rules for all collections.
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 7, 17);
    }
  }
}
